Em JavaScript, existem várias operações básicas que podem ser realizadas em arrays. Aqui estão algumas das operações mais comuns:

Acessar elementos:
Para acessar um elemento específico em um array, você pode usar a notação de colchetes ([]). Os arrays em JavaScript são baseados em zero, então o primeiro elemento está no índice 0. Por exemplo:

const array = [1, 2, 3, 4, 5];
console.log(array[0]); // imprime 1

Alterar elementos:
Você pode alterar o valor de um elemento em um array atribuindo um novo valor a ele usando a notação de colchetes ([]). Por exemplo:

const array = [1, 2, 3, 4, 5];
array[2] = 10;
console.log(array); // imprime [1, 2, 10, 4, 5]

Adicionar elementos:
Você pode adicionar elementos a um array usando o método push(), que adiciona elementos ao final do array. Por exemplo:

const array = [1, 2, 3];
array.push(4);
console.log(array); // imprime [1, 2, 3, 4]

Remover elementos:
Você pode remover elementos de um array usando o método pop(), que remove o último elemento do array, ou o método splice(), que permite remover elementos de posições específicas. Por exemplo:

const array = [1, 2, 3, 4, 5];
array.pop();
console.log(array); // imprime [1, 2, 3, 4]

const array2 = [1, 2, 3, 4, 5];
array2.splice(2, 1);
console.log(array2); // imprime [1, 2, 4, 5]

Iterar sobre elementos:
Você pode percorrer todos os elementos de um array usando um loop for ou métodos de iteração, como forEach(), map(), filter(), entre outros. Por exemplo:

const array = [1, 2, 3, 4, 5];
for (let i = 0; i < array.length; i++) {
  console.log(array[i]);
}

array.forEach(element => {
  console.log(element);
});

